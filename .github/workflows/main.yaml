name: Deploy to Amazon ECR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: 959112994980.dkr.ecr.ap-northeast-2.amazonaws.com
  ECR_REPOSITORY: web-site
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GIT_HASH .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GIT_HASH
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$GIT_HASH"
        
    - name: repository checkout
      uses: actions/checkout@v2
      with:
        repository: zcon-srchoi/argocd-kube
        token: ${{ secrets.MY_GITHUB_TOKEN }}
        path: gitops-argocd

    - name: Add date and push
      run: |
        GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
        cd gitops-argocd
        sed -i "16s/.*/      - image: $ECR_REGISTRY\/$ECR_REPOSITORY:$GIT_HASH/g" deployment.yaml
        git add .
        git config --global user.email "github-actions@github.com"
        git config --global user.name "github-actions"
        git commit -am "Inject Tag"
        git push
